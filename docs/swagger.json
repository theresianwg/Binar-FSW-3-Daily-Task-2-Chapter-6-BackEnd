{
    "openapi": "3.0.0",
    "info": {
        "title": "Challenge FSW 3 chapter 5",
        "description": "API description in Markdown.",
        "version": "1.0.0"
    },
    "tags": [
        {
            "name": "Shops",
            "description": "This is API for managing CRUD SHOPS"
        },
        {
            "name": "Products",
            "description": "This is API for managing CRUD PRODUCTS"
        },
        {
            "name": "Users",
            "description": "This is API for managing CRUD USERS"
        }
    ],
    "servers": [
        {
            "url": "http://localhost:3000/api/v1/"
        }
    ],
    "paths": {
        "/shops": {
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "Returns a list of shops",
                "description": "This is API for get all shop data",
                "responses": {
                    "200": {
                        "description": "Success get all shops data"
                    }
                }
            }
        },

        "/shops/search": {
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "Success search shops",
                "description": "This is API for search shops data",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "description": "Success search shops",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "toko imam"
                                    }                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success search shops",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "toko imam"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "bandung"
                                                },
                                                "userId": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed because shops is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed because shops is empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/shops/{id}":{
            "get": {
                "tags": [
                    "Shops"
                ],
                "summary": "Returns a list of shops by id",
                "description": "This is API for search shops data by id",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Input ID of the shops to get",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "required": true
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Success get shops data by id"
                    }
                }
            },
            "put": {
                "tags": [
                    "Shops"
                ],
                "summary": "Update shops by id",
                "description": "This is API for update shop by id",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Input ID of the shop to update",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Success edit shop",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "toko jeno"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "bandung"
                                    },
                                    "userId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success update shop by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "toko jeno"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "bandung"
                                                },
                                                "userId": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed because name shop is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed because shop name empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }                
            },

            "delete": {
                "tags": [
                    "Shops"
                ],
                "summary": "Delete shops by id",
                "description": "This is API for delete shops data by id",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "input ID of the shops to delete",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success delete this id"
                    },
                    "404":{
                        "description": "This id is not found"
                    }
                }
            }
        },

        "/shops/create": {
            "post": {
                "tags": [
                    "Shops"
                ],
                "summary": "Success create shop",
                "description": "This is API for create new shops data",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "description": "Success create new shop",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "toko imam"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "bandung"
                                    },
                                    "userId": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success create new Shop",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "toko imam"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "bandung"
                                                },
                                                "userId": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed because name shop is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed because shop name empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },




        "/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Returns a list of products",
                "description": "This is API for get all products data",
                "responses": {
                    "200": {
                        "description": "Success get all products data"
                    }
                }
            }
        },

        "/products/search": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Success search products",
                "description": "This is API for search products data",
                "security": [
                    {
                        "bearerToken": []
                    }
                ],
                "requestBody": {
                    "description": "Success search products",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Pajero"
                                    }                                
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success search product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Pajero"
                                                },
                                                "price": {
                                                    "type": "integer",
                                                    "example": "4500000"
                                                },
                                                "stock": {
                                                    "type": "integer",
                                                    "example": "2"
                                                },
                                                "shopId": {
                                                    "type": "integer",
                                                    "example": "1"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Failed because products is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed because products is empty"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
    },

    "/products/{id}": {
        "get": {
            "tags": [
                "Products"
            ],
            "summary": "Returns a list of products by id",
            "description": "This is API for get products data by id",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "Input ID of the products to get",
                    "schema": {
                        "type": "integer",
                        "example": 1
                    },
                    "required": true
                }
            ], 
            "security": [
                {
                    "bearerToken": []
                }
            ],
            "responses": {
                "200": {
                    "description": "Success get products data by id"
                }
            }
        },

        "put": {
            "tags": [
                "Products"
            ],
            "summary": "Update products by id",
            "description": "This is API for update products data by id",
            "security": [
                {
                    "bearerToken": []
                }
            ],
            "requestBody": {
                "description": "Success edit product",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "Pajero"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Success update product by id",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "Success"
                                    },
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Pajero"
                                            },
                                            "price": {
                                                "type": "integer",
                                                "example": "4500000"
                                            },
                                            "stock": {
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "shopId": {
                                                "type": "integer",
                                                "example": "1"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Failed because name product is empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "failed"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "Failed because name product is empty"
                                    }
                                }
                            }
                        }
                    }
                }
            }                
        },

        "delete": {
            "tags": [
                "Products"
            ],
            "summary": "Delete products by id",
            "description": "This is API for delete products data",
            "security": [
                {
                    "bearerToken": []
                }
            ],
            "responses": {
                "200": {
                    "description": "Success delete this id"
                },
                "404":{
                    "description": "This id is not found"
                }
            }
        }
    },

    "/products/create": {
        "post": {
            "tags": [
                "Products"
            ],
            "summary": "Success create products",
            "description": "This is API for create new products data",
            "security": [
                {
                    "bearerToken": []
                }
            ],
            "requestBody": {
                "description": "Success create products",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "Subaru"
                                },
                                "price": {
                                    "type": "integer",
                                    "example": "3800000"
                                },
                                "stock": {
                                    "type": "integer",
                                    "example": "3"
                                },
                                "shopId": {
                                    "type": "integer",
                                    "example": "2"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Success create new Products",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "Success"
                                    },
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Subaru"
                                            },
                                            "price": {
                                                "type": "integer",
                                                "example": "3800000"
                                            },
                                            "stock": {
                                                "type": "integer",
                                                "example": "3"
                                            },
                                            "shopId": {
                                                "type": "integer",
                                                "example": "2"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Failed because products is empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "failed"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "Failed because products is empty"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },





    "/users": {
        "get": {
            "tags": [
                "Users"
            ],
            "summary": "Returns a list of users",
            "description": "This is API for get all Users data",
            "responses": {
                "200": {
                    "description": "Success get user data"
                }
            }
        }
    },

    "/users/{id}": {
        "get": {
            "tags": [
                "Users"
            ],
            "summary": "Returns a list of users by id",
            "description": "This is API for get user data by id",
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "Input ID of the user to get",
                    "schema": {
                        "type": "integer",
                        "example": 1
                    },
                    "required": true
                }
            ], 
            "security": [
                {
                    "bearerToken": []
                }
            ],
            "responses": {
                "200": {
                    "description": "Success get user data by id"
                }
            }
        }
    },


    "/users/register": {
        "post": {
            "tags": [
                "Users"
            ],
            "summary": "Success create user",
            "description": "This is API for create new user.",
            "requestBody": {
                "description": "Success create user",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "example": "Ciwang"
                                },
                                "password": {
                                    "type": "string",
                                    "example": "ciwang931"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "user"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Success create new User",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "Success"
                                    },
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Ciwang"
                                            },
                                            "password": {
                                                "type": "string",
                                                "example": "ciwang931"
                                            },
                                            "role": {
                                                "type": "string",
                                                "example": "user"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Failed because username is empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "failed"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "Failed because username is empty"
                                    }
                                }
                            }
                        }
                    }
                },
                "404": {
                    "description": "Failed because username is already exist",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "failed"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "Failed because username is already exist"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
            
    "/users/login": {
        "post": {
            "tags": [
                "Users"
            ],
            "summary": "Success login user",
            "description": "This is API for login user",
            "requestBody": {
                "description": "Success login user",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "example": "Ciwang"
                                },
                                "password": {
                                    "type": "string",
                                    "example": "ciwang931"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "201": {
                    "description": "Success login",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "Success"
                                    },
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Ciwang"
                                            },
                                            "password": {
                                                "type": "string",
                                                "example": "ciwang931"
                                            },
                                            "role": {
                                                "type": "string",
                                                "example": "user"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Failed because username is empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "failed"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "Failed because username is empty"
                                    }
                                }
                            }
                        }
                    }
                }
            }
    },

        "put": {
            "tags": [
                "Users"
            ],
            "summary": "Update users by id",
            "description": "This is API for update user data by id",
            "security": [
                {
                    "bearerToken": []
                }
            ],
            "requestBody": {
                "description": "Success edit user",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "example": "Ressy"
                                }
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Success update user by id",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "Success"
                                    },
                                    "data": {
                                        "type": "object",
                                        "properties": {
                                            "username": {
                                                "type": "string",
                                                "example": "Ressy"
                                            },
                                            "password": {
                                                "type": "string",
                                                "example": "ciwang931"
                                            },
                                            "role": {
                                                "type": "string",
                                                "example": "user"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Failed because username is empty",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "failed"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "Failed because username is empty"
                                    }
                                }
                            }
                        }
                    }
                }
            }                
        },

        "delete": {
            "tags": [
                "Users"
            ],
            "summary": "Delete users by id",
            "description": "This is API for delete user data by id",
            "security": [
                {
                    "bearerToken": []
                }
            ],
            "responses": {
                "200": {
                    "description": "Success delete this id"
                },
                "404":{
                    "description": "This id is not found"
                }
            }
        }
    }
},
     
    "components": {
      "schemas": {
          "shops": {
              "type": "object",
              "properties": {
                  "name": {
                      "type": "string",
                      "example": "toko imam"
                  },
                  "city": {
                      "type": "string",
                      "example": "bandung"
                  },
                  "userId": {
                      "type": "integer",
                      "example": 1
                  }
              }
          },

          "users": {
              "type": "object",
              "properties": {
                  "username": {
                      "type": "string",
                      "example": "Ciwang"
                  },
                  "password": {
                      "type": "string",
                      "example": "ciwang931"
                  },
                  "role": {
                      "type": "string",
                      "example": "user"
                  }
              }
          },

          "products": {
              "type": "object",
              "properties": {
                  "name": {
                      "type": "string",
                      "example": "Pajero"
                  },
                  "price": {
                      "type": "integer",
                      "example": "4500000"
                  },
                  "stock": {
                      "type": "integer",
                      "example": "2"
                  },
                  "shopId": {
                      "type": "integer",
                      "example": "1"
                  }
              }
          }
      },
      "securitySchemes": {
          "bearerToken": {
              "type": "http",
              "scheme": "bearer"
            }
        }
    }
}

